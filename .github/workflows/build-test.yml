# Build and Test workflow for GitHub Actions debugging
name: Build and Test

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  NODE_VERSION: '18'
  NPM_CONFIG_FUND: false
  NPM_CONFIG_AUDIT: false

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        node-version: [18, 20]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-fund --no-audit --prefer-offline
          
      - name: Validate package.json
        run: |
          node -e "console.log('Package.json is valid JSON')"
          npm list --depth=0
          
      - name: Run build script
        run: |
          npm run build
          
      - name: Verify build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build directory created"
            ls -la dist/
          else
            echo "❌ Build directory not found"
            exit 1
          fi
          
      - name: Test Firebase CLI
        run: |
          npx firebase --version
          npx firebase projects:list --token "${{ secrets.FIREBASE_TOKEN || 'test-token' }}" || echo "Firebase token not available in test"

  dependency-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --no-fund --no-audit
        
      - name: Run security audit
        run: |
          npm audit --audit-level moderate --omit dev || echo "Audit completed with warnings"
          
      - name: Check for vulnerabilities
        run: |
          npm audit --audit-level high --omit dev